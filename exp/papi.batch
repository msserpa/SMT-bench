#!/bin/bash
#SBATCH --exclude=tupi1,hype4,hype5,draco1,draco6,draco7
#SBATCH --exclusive

date +"%d/%m/%Y %H:%M:%S"
printf "\t Running on $SLURM_JOB_NODELIST \n\n"

if [ $# -lt 2 ]; then
	echo "Usage : $0 metric step"
	exit 1
fi

metric=$1
step=$2

host=`hostname`
arch=`gcc -march=native -Q --help=target | grep march | awk '{print $2}'`

date +"%d/%m/%Y %H:%M:%S"
exec=mixed.$host
make -C .. &> /tmp/papi.make
mv ../bin/$exec $SCRATCH/$exec
exec=$SCRATCH$exec
sed 's/^/\t/' /tmp/papi.make
printf "\n"

unset -v KMP_AFFINITY
unset -v GOMP_CPU_AFFINITY
unset -v OMP_NUM_THREADS
unset -v OMP_SCHEDULE
unset -v PAPI_EVENT
unset -v LD_PRELOAD

#app=(ctl-complex ctl-conditional ctl-random ctl-small-bbl ctl-switch dep-chain1 dep-chain2 dep-chain3 dep-chain4 dep-chain5 dep-chain6 fp-add fp-div fp-mul int-add int-div int-mul load-dep:16 load-dep:32 load-dep:64 load-dep:128 load-dep:256 load-dep:512 load-dep:1024 load-dep:2048 load-dep:4096 load-dep:8192 load-dep:16384 load-dep:32768 load-dep:65536 load-ind:16 load-ind:32 load-ind:64 load-ind:128 load-ind:256 load-ind:512 load-ind:1024 load-ind:2048 load-ind:4096 load-ind:8192 load-ind:16384 load-ind:32768 load-ind:65536 load-rand:16 load-rand:32 load-rand:64 load-rand:128 load-rand:256 load-rand:512 load-rand:1024 load-rand:2048 load-rand:4096 load-rand:8192 load-rand:16384 load-rand:32768 load-rand:65536 store-ind:16 store-ind:32 store-ind:64 store-ind:128 store-ind:256 store-ind:512 store-ind:1024 store-ind:2048 store-ind:4096 store-ind:8192 store-ind:16384 store-ind:32768 store-ind:65536 store-rand:16 store-rand:32 store-rand:64 store-rand:128 store-rand:256 store-rand:512 store-rand:1024 store-rand:2048 store-rand:4096 store-rand:8192 store-rand:16384 store-rand:32768 store-rand:65536)
app=(ctl-conditional ctl-random ctl-switch dep-chain1 dep-chain6 fp-div fp-mul int-div int-mul load-dep:32 load-dep:2048 load-ind:32 load-ind:2048 load-rand:32 load-rand:2048 store-ind:32 store-ind:2048 store-rand:32 store-rand:2048)

date +"%d/%m/%Y %H:%M:%S"
printf "\t Warm-up hardware counters \n"
printf "\t Metric: $metric \n\n"

PAPI_EVENT=$metric $exec idle rand 5 &> /dev/null

for mapping in heterogeneous homogeneous; do
	for i in ${!app[*]}; do
		appA=${app[$i]}
		grepA=`echo $appA | awk -F: '{printf "%s", $1} NF > 1{printf "-%sKB", $2} {printf ":"}'`
		for j in ${!app[*]}; do
			appB=${app[$j]}
			grepB=`echo $appB | awk -F: '{printf "%s", $1} NF > 1{printf "-%sKB", $2} {printf ":"}'`
			if (( i <= j )); then
				date +"%d/%m/%Y %H:%M:%S"
				printf "\t Mapping: $mapping \n"
				printf "\t Application A: ${app[$i]} \n"
				printf "\t Application B: ${app[$j]} \n\n"
				PAPI_EVENT=$metric $exec $appA,$appB $mapping 5 &> /tmp/micro.out

				awk -v d="$host,$arch" -F"," 'BEGIN { OFS = "," } {print d, $0}' /tmp/micro.papi >> output/$metric.`hostname`.$step.papi
				[[ -s /tmp/micro.papi ]] || echo "error"
			fi
		done
	done
done
